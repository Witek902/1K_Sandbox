/* File generated with Shader Minifier 1.1.4
 * http://www.ctrl-alt-test.fr
 */
#ifndef SHADER_CODE_H_
# define SHADER_CODE_H_

const char *shader_glsl =
 "uint v;"
 "float t()"
 "{"
   "return v^=v<<1U,v^=v>>3U,v^=v<<10U,float(v%10000)/10000.;"
 "}"
 "vec2 t(vec3 v)"
 "{"
   "vec3 y=vec3(6.,0,6.),t=mod(v,y)-.5*y;"
   "return vec2(length(max(abs(t)-vec3(1.,1.,1.),0.)),3.);"
 "}"
 "vec2 n(vec3 v)"
 "{"
   "return vec2(v.y+1.,50.);"
 "}"
 "vec2 n(vec2 v,vec2 y)"
 "{"
   "return v.x<y.x?v:y;"
 "}"
 "vec2 e(vec3 v)"
 "{"
   "vec2 y=n(v);"
   "y=n(y,t(v));"
   "return y;"
 "}"
 "void main()"
 "{"
   "vec3 y=vec3(0.);"
   "vec2 n=vec2(.0001,0.),d=gl_FragCoord.xy;"
   "v=1000U*uint(d.x)+uint(d.y);"
   "vec2 k=vec2(1280.,720.),r=d/k;"
   "for(int f=0;f<100;f++)"
     "{"
       "vec3 U=1.,x=vec3(0.,3,-8.),i=vec3((d+2.*vec2(t(),t()))/k.y-vec2(.889,.5),1.),m=x+1.5*i;"
       "x.xy+=vec2(t(),t())*.001;"
       "i=normalize(m-x);"
       "for(int g=0;g<3;g++)"
         "{"
           "float l=1000.,a=.001,b=-1.;"
           "for(int c=0;c<500;c++)"
             "{"
               "vec2 s=e(m=x+i*a);"
               "if(abs(s.x)<n.x||a>l)"
                 "break;"
               "a+=s.x;"
               "b=s.y;"
             "}"
           "vec3 s=vec3(.5,.8,1.2)+vec3(5.,1.,0.)*pow(max(0.,dot(i,vec3(-.3,.1,.8))),10.);"
           "if(a>=l)"
             "{"
               "y+=U*s;"
               "break;"
             "}"
           "vec3 c=normalize(vec3(e(m+n.xyy).x-e(m-n.xyy).x,e(m+n.yxy).x-e(m-n.yxy).x,e(m+n.yyx).x-e(m-n.yyx).x));"
           "x=m+.001*c;"
           "i=normalize(vec3(t(),t(),t())*2.-1.);"
           "i=dot(i,c)<0.?-i:i;"
           "U*=dot(i,c);"
           "vec3 o=.5+.5*sin(vec3(.15,.08,.1)*(b-1.));"
           "U*=o;"
           "U=lerp(s,U,exp(-.001*a));"
         "}"
     "}"
   "y*=3.;"
   "y=sqrt(y/100.);"
   "y=1.-exp(-y);"
   "gl_FragColor=vec4(y,1.);"
 "}";

#endif // SHADER_CODE_H_
