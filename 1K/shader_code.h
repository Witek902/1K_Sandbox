/* File generated with Shader Minifier 1.1.4
 * http://www.ctrl-alt-test.fr
 */
#ifndef SHADER_CODE_H_
# define SHADER_CODE_H_

const char *shader_glsl =
 "uint v;"
 "float m()"
 "{"
   "return v^=v<<1U,v^=v>>3U,v^=v<<10U,float(v%10000)/10000.;"
 "}"
 "float m(vec3 m)"
 "{"
   "vec3 v=abs(m*=.5)-.5;"
   "m+=.5;"
   "float y=max(max(v.x,v.y),v.z),U=1.;"
   "for(int f=1;f<8;f++)"
     "U*=3.,v=.5-abs(mod(m*U,3.)-1.5),y=max(min(max(v.x,v.z),min(max(v.x,v.y),max(v.y,v.z)))/U,y);"
   "return y*2.;"
 "}"
 "void main()"
 "{"
   "vec3 y=vec3(0.);"
   "vec2 f=vec2(.0001,0.),i=gl_FragCoord.xy;"
   "v=1000U*uint(i.x)+uint(i.y);"
   "vec2 U=vec2(1280.,720.),r=i/U;"
   "for(int b=0;b<100;b++)"
     "{"
       "vec3 u=vec3(2.),x=vec3(0.,0.,-1.),k=vec3((i+1.5*vec2(m(),m()))/U.y-vec2(.89,.5),1.),n=x+1.5*k;"
       "x.xy+=vec2(m(),m())*.01;"
       "k=normalize(n-x);"
       "for(int g=0;g<5;g++)"
         "{"
           "float z=50.,e=0.;"
           "for(int a=0;a<50;a++)"
             "{"
               "float d=m(n=x+k*e);"
               "e+=d;"
               "if(e>z||abs(d)<f.x)"
                 "break;"
             "}"
           "if(e>=z)"
             "{"
               "y+=2.*u+vec3(-.5,0.,.5)*k.y;"
               "break;"
             "}"
           "vec3 d=normalize(vec3(m(n+f.xyy)-m(n-f.xyy),m(n+f.yxy)-m(n-f.yxy),m(n+f.yyx)-m(n-f.yyx)));"
           "x=n+.001*d;"
           "k=normalize(vec3(m(),m(),m())*2.-1.);"
           "k=dot(k,d)<0.?-k:k;"
           "u*=dot(k,d);"
         "}"
     "}"
   "y=sqrt(y/100.);"
   "y=1.-exp(-y);"
   "gl_FragColor=vec4(y,1.);"
 "}";

#endif // SHADER_CODE_H_
